<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝桥杯入门习题</title>
      <link href="/2022/01/06/lanqiao/"/>
      <url>/2022/01/06/lanqiao/</url>
      
        <content type="html"><![CDATA[<h1 id="数列排序"><a href="#数列排序" class="headerlink" title="数列排序"></a>数列排序</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T52">http://lx.lanqiao.cn/problem.page?gpid=T52</a></p><h2 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　给定一个长度为n的数列，将这个数列按从小到大的顺序排列。1&lt;=n&lt;=200<br>输入格式<br>　　第一行为一个整数n。<br>　　第二行包含n个整数，为待排序的数，每个整数的绝对值小于10000。<br>输出格式<br>　　输出一行，按从小到大的顺序输出排序后的数列。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>5<br>8 3 6 4 9</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>3 4 6 8 9</p><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n= scan.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] arr=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr[i]= scan.nextInt();</span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">System.out.print(arr[i]+<span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十六进制转十进制"><a href="#十六进制转十进制" class="headerlink" title="十六进制转十进制"></a>十六进制转十进制</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T50">http://lx.lanqiao.cn/problem.page?gpid=T50</a>   </p><h2 id="资源限制-1"><a href="#资源限制-1" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　从键盘输入一个不超过8位的正的十六进制数字符串，将它转换为正的十进制数后输出。<br>　　注：十六进制数中的10~15分别用大写的英文字母A、B、C、D、E、F表示。</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><p>FFFF</p><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><p>65535</p><h2 id="代码提交-1"><a href="#代码提交-1" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String hex= scan.next();</span><br><span class="line">System.out.println(Long.valueOf(hex,<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十进制转十六进制"><a href="#十进制转十六进制" class="headerlink" title="十进制转十六进制"></a>十进制转十六进制</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T49">http://lx.lanqiao.cn/problem.page?gpid=T49</a></p><h2 id="资源限制-2"><a href="#资源限制-2" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述-2"><a href="#问题描述-2" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　十六进制数是在程序设计时经常要使用到的一种整数的表示方式。它有0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F共16个符号，分别表示十进制数的0至15。十六进制的计数方法是满16进1，所以十进制数16在十六进制中是10，而十进制的17在十六进制中是11，以此类推，十进制的30在十六进制中是1E。<br>　　给出一个非负整数，将它表示成十六进制的形式。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>　　输入包含一个非负整数a，表示要转换的数。0&lt;=a&lt;=2147483647</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>　　输出这个整数的16进制表示</p><h2 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h2><p>30</p><h2 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h2><p>1E</p><h2 id="代码提交-2"><a href="#代码提交-2" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> target= scan.nextInt();</span><br><span class="line">System.out.println(Integer.toHexString(target).toUpperCase());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="特殊回文数"><a href="#特殊回文数" class="headerlink" title="特殊回文数"></a>特殊回文数</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T48">http://lx.lanqiao.cn/problem.page?gpid=T48</a></p><h2 id="资源限制-3"><a href="#资源限制-3" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述-3"><a href="#问题描述-3" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　123321是一个非常特殊的数，它从左边读和从右边读是一样的。<br>　　输入一个正整数n， 编程求所有这样的五位和六位十进制数，满足各位数字之和等于n 。</p><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><p>　　输入一行，包含一个正整数n。</p><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><p>　　按从小到大的顺序输出满足条件的整数，每个整数占一行。</p><h2 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h2><p>52</p><h2 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h2><p>899998<br>989989<br>998899</p><h2 id="代码提交-3"><a href="#代码提交-3" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n= scan.nextInt();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line"><span class="keyword">if</span>((i+j+k+j+i)==n)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>+i+j+k+j+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++) &#123;</span><br><span class="line"><span class="keyword">if</span>((i+j+k+k+j+i)==n)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>+i+j+k+k+j+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="回文数"><a href="#回文数" class="headerlink" title="回文数"></a>回文数</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T47">http://lx.lanqiao.cn/problem.page?gpid=T47</a></p><h2 id="资源限制-4"><a href="#资源限制-4" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述-4"><a href="#问题描述-4" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　1221是一个非常特殊的数，它从左边读和从右边读是一样的，编程求所有这样的四位十进制数。</p><h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>　　按从小到大的顺序输出满足条件的四位十进制数。</p><h2 id="代码提交-4"><a href="#代码提交-4" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span>+i+j+j+i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="特殊的数字"><a href="#特殊的数字" class="headerlink" title="特殊的数字"></a>特殊的数字</h1><p>来源：<a href="http://lx.lanqiao.cn/problem.page?gpid=T46">http://lx.lanqiao.cn/problem.page?gpid=T46</a></p><h2 id="资源限制-5"><a href="#资源限制-5" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：512.0MB</p><h2 id="问题描述-5"><a href="#问题描述-5" class="headerlink" title="问题描述"></a>问题描述</h2><p>　　153是一个非常特殊的数，它等于它的每位数字的立方和，即153=1<em>1</em>1+5<em>5</em>5+3<em>3</em>3。编程求所有满足这种条件的三位十进制数。</p><h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>　　按从小到大的顺序输出满足条件的三位十进制数，每个数占一行。</p><h2 id="代码提交-5"><a href="#代码提交-5" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">100</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> a=i/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> b=i/<span class="number">10</span>%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> c=i%<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>((a*a*a+b*b*b+c*c*c)==i)</span><br><span class="line">System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="杨辉三角形"><a href="#杨辉三角形" class="headerlink" title="杨辉三角形"></a>杨辉三角形</h1><h2 id="资源限制-6"><a href="#资源限制-6" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-6"><a href="#问题描述-6" class="headerlink" title="问题描述"></a>问题描述</h2><p>杨辉三角形又称Pascal三角形，它的第i+1行是(a+b)i的展开式的系数。</p><p>　　<br>它的一个重要性质是：三角形中的每个数字等于它两肩上的数字相加。</p><p>　　<br>下面给出了杨辉三角形的前4行：</p><p>　　<br>   1</p><p>　　<br>  1 1</p><p>　　<br> 1 2 1</p><p>　　<br>1 3 3 1</p><p>　　<br>给出n，输出它的前n行。</p><h2 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个数n。</p><h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出杨辉三角形的前n行。每一行从这一行的第一个数开始依次输出，中间使用一个空格分隔。请不要在前面输出多余的空格。<br>样例输入<br>4</p><h2 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h2><p>1<br>1 1<br>1 2 1<br>1 3 3 1</p><h2 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 34。</p><h2 id="代码提交-6"><a href="#代码提交-6" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line"><span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">arr[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[i][i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (i &gt; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; i ; j++) &#123;</span><br><span class="line">arr[i][j] = arr[i - <span class="number">1</span>][j - <span class="number">1</span>] + arr[i - <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">System.out.print(arr[i][j] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="查找整数"><a href="#查找整数" class="headerlink" title="查找整数"></a>查找整数</h1><h2 id="资源限制-7"><a href="#资源限制-7" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-7"><a href="#问题描述-7" class="headerlink" title="问题描述"></a>问题描述</h2><p>给出一个包含n个整数的数列，问整数a在数列中的第一次出现是第几个。</p><h2 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含一个整数n。</p><p>第二行包含n个非负整数，为给定的数列，数列中的每个数都不大于10000。</p><p>第三行包含一个整数a，为待查找的数。</p><h2 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h2><p>如果a在数列中出现了，输出它第一次出现的位置(位置从1开始编号)，否则输出-1。</p><h2 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h2><p>6<br>1 9 4 8 3 9<br>9</p><h2 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h2><p>2</p><h2 id="数据规模与约定-1"><a href="#数据规模与约定-1" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1000。</p><h2 id="代码提交-7"><a href="#代码提交-7" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n=scan.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] arr=<span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr[i]= scan.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> target=scan.nextInt();</span><br><span class="line"><span class="keyword">int</span> result=-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(target==arr[i])&#123;</span><br><span class="line">result=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(result);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="数列特征"><a href="#数列特征" class="headerlink" title="数列特征"></a>数列特征</h1><h2 id="资源限制-8"><a href="#资源限制-8" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-8"><a href="#问题描述-8" class="headerlink" title="问题描述"></a>问题描述</h2><p>给出n个数，找出这n个数的最大值，最小值，和。</p><h2 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行为整数n，表示数的个数。</p><p>第二行有n个数，为给定的n个数，每个数的绝对值都小于10000。</p><h2 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出三行，每行一个整数。第一行表示这些数中的最大值，第二行表示这些数中的最小值，第三行表示这些数的和。</p><h2 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h2><p>5<br>1 3 -2 4 5</p><h2 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h2><p>5<br>-2<br>11</p><h2 id="数据规模与约定-2"><a href="#数据规模与约定-2" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 10000。</p><h2 id="代码提交-8"><a href="#代码提交-8" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">arr[i] = scanner.nextInt();</span><br><span class="line">sum += arr[i];</span><br><span class="line">&#125;</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line">System.out.println(arr[n-<span class="number">1</span>]);</span><br><span class="line">System.out.println(arr[<span class="number">0</span>]);</span><br><span class="line">System.out.println(sum);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="字母图形"><a href="#字母图形" class="headerlink" title="字母图形"></a>字母图形</h1><h2 id="资源限制-9"><a href="#资源限制-9" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-9"><a href="#问题描述-9" class="headerlink" title="问题描述"></a>问题描述</h2><p>利用字母可以组成一些美丽的图形，下面给出了一个例子：</p><p>ABCDEFG</p><p>BABCDEF</p><p>CBABCDE</p><p>DCBABCD</p><p>EDCBABC</p><p>这是一个5行7列的图形，请找出这个图形的规律，并输出一个n行m列的图形。</p><h2 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一行，包含两个整数n和m，分别表示你要输出的图形的行数的列数。</p><h2 id="输出格式-7"><a href="#输出格式-7" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出n行，每个m个字符，为你的图形。</p><h2 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h2><p>5 7</p><h2 id="样例输出-7"><a href="#样例输出-7" class="headerlink" title="样例输出"></a>样例输出</h2><p>ABCDEFG<br>BABCDEF<br>CBABCDE<br>DCBABCD<br>EDCBABC</p><h2 id="数据规模与约定-3"><a href="#数据规模与约定-3" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n, m &lt;= 26。</p><h2 id="代码提交-9"><a href="#代码提交-9" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line"><span class="keyword">int</span> m = scan.nextInt();</span><br><span class="line"><span class="keyword">char</span>[][] result = <span class="keyword">new</span> <span class="keyword">char</span>[<span class="number">26</span>][<span class="number">26</span>];</span><br><span class="line"><span class="keyword">int</span> min =<span class="number">26</span>;</span><br><span class="line"><span class="keyword">while</span> (--min&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">result[min][min] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span> tmp1=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">char</span> tmp2=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = min+<span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">result[min][i]=++tmp1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j=min-<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(j&gt;=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span> (; j &gt;=<span class="number">0</span> ; j--) &#123;</span><br><span class="line">result[min][j]=++tmp2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">System.out.print(result[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="01字串"><a href="#01字串" class="headerlink" title="01字串"></a>01字串</h1><h2 id="资源限制-10"><a href="#资源限制-10" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-10"><a href="#问题描述-10" class="headerlink" title="问题描述"></a>问题描述</h2><p>对于长度为5位的一个01串，每一位都可能是0或1，一共有32种可能。它们的前几个是：</p><p>00000</p><p>00001</p><p>00010</p><p>00011</p><p>00100</p><p>请按从小到大的顺序输出这32种01串。</p><h2 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h2><p>本试题没有输入。</p><h2 id="输出格式-8"><a href="#输出格式-8" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出32行，按从小到大的顺序每行一个长度为5的01串。</p><h2 id="样例输出-8"><a href="#样例输出-8" class="headerlink" title="样例输出"></a>样例输出</h2><p>00000<br>00001<br>00010<br>00011<br>&lt;以下部分省略&gt;</p><h2 id="代码提交-10"><a href="#代码提交-10" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">2</span>; k++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; <span class="number">2</span>; l++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; <span class="number">2</span>; m++) &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;&quot;</span> + i + j + k + l + m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="闰年判断"><a href="#闰年判断" class="headerlink" title="闰年判断"></a>闰年判断</h1><h2 id="资源限制-11"><a href="#资源限制-11" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-11"><a href="#问题描述-11" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定一个年份，判断这一年是不是闰年。</p><p>当以下情况之一满足时，这一年是闰年：</p><ol><li><p>年份是4的倍数而不是100的倍数；</p></li><li><p>年份是400的倍数。</p></li></ol><p>其他的年份都不是闰年。</p><h2 id="输入格式-7"><a href="#输入格式-7" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数y，表示当前的年份。</p><h2 id="输出格式-9"><a href="#输出格式-9" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，如果给定的年份是闰年，则输出yes，否则输出no。</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>当试题指定你输出一个字符串作为结果（比如本题的yes或者no，你需要严格按照试题中给定的大小写，写错大小写将不得分。</p><h2 id="样例输入-7"><a href="#样例输入-7" class="headerlink" title="样例输入"></a>样例输入</h2><p>2013</p><h2 id="样例输出-9"><a href="#样例输出-9" class="headerlink" title="样例输出"></a>样例输出</h2><p>no</p><h2 id="样例输入-8"><a href="#样例输入-8" class="headerlink" title="样例输入"></a>样例输入</h2><p>2016</p><h2 id="样例输出-10"><a href="#样例输出-10" class="headerlink" title="样例输出"></a>样例输出</h2><p>yes</p><h2 id="数据规模与约定-4"><a href="#数据规模与约定-4" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1990 &lt;= y &lt;= 2050。</p><h2 id="代码提交-11"><a href="#代码提交-11" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> year=scan.nextInt();</span><br><span class="line"><span class="keyword">if</span>((year%<span class="number">4</span>==<span class="number">0</span>&amp;&amp;year%<span class="number">100</span>!=<span class="number">0</span>)||(year%<span class="number">400</span>==<span class="number">0</span>))</span><br><span class="line">System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Fibonacci数列"><a href="#Fibonacci数列" class="headerlink" title="Fibonacci数列"></a>Fibonacci数列</h1><h2 id="资源限制-12"><a href="#资源限制-12" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-12"><a href="#问题描述-12" class="headerlink" title="问题描述"></a>问题描述</h2><p>Fibonacci数列的递推公式为：Fn=Fn-1+Fn-2，其中F1=F2=1。</p><p>当n比较大时，Fn也非常大，现在我们想知道，Fn除以10007的余数是多少。</p><h2 id="输入格式-8"><a href="#输入格式-8" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数n。</p><h2 id="输出格式-10"><a href="#输出格式-10" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包含一个整数，表示Fn除以10007的余数。</p><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><p>在本题中，答案是要求Fn除以10007的余数，因此我们只要能算出这个余数即可，而不需要先计算出Fn的准确值，再将计算的结果除以10007取余数，直接计算余数往往比先算出原数再取余简单。</p><h2 id="样例输入-9"><a href="#样例输入-9" class="headerlink" title="样例输入"></a>样例输入</h2><p>10</p><h2 id="样例输出-11"><a href="#样例输出-11" class="headerlink" title="样例输出"></a>样例输出</h2><p>55</p><h2 id="样例输入-10"><a href="#样例输入-10" class="headerlink" title="样例输入"></a>样例输入</h2><p>22</p><h2 id="样例输出-12"><a href="#样例输出-12" class="headerlink" title="样例输出"></a>样例输出</h2><p>7704</p><h2 id="数据规模与约定-5"><a href="#数据规模与约定-5" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1,000,000。</p><h2 id="代码提交-12"><a href="#代码提交-12" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] resule = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">2</span>];</span><br><span class="line">resule[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">resule[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">resule[i] = ((resule[i - <span class="number">1</span>] + resule[i - <span class="number">2</span>]) % <span class="number">10007</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(resule[n - <span class="number">1</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span></span><br><span class="line">System.out.println(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="圆的面积"><a href="#圆的面积" class="headerlink" title="圆的面积"></a>圆的面积</h1><h2 id="资源限制-13"><a href="#资源限制-13" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-13"><a href="#问题描述-13" class="headerlink" title="问题描述"></a>问题描述</h2><p>给定圆的半径r，求圆的面积。</p><h2 id="输入格式-9"><a href="#输入格式-9" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包含一个整数r，表示圆的半径。</p><h2 id="输出格式-11"><a href="#输出格式-11" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包含一个实数，四舍五入保留小数点后7位，表示圆的面积。</p><h2 id="说明：在本题中，输入是一个整数，但是输出是一个实数。"><a href="#说明：在本题中，输入是一个整数，但是输出是一个实数。" class="headerlink" title="说明：在本题中，输入是一个整数，但是输出是一个实数。"></a>说明：在本题中，输入是一个整数，但是输出是一个实数。</h2><p>对于实数输出的问题，请一定看清楚实数输出的要求，比如本题中要求保留小数点后7位，则你的程序必须严格的输出7位小数，输出过多或者过少的小数位数都是不行的，都会被认为错误。实数输出的问题如果没有特别说明，舍入都是按四舍五入进行。</p><h2 id="样例输入-11"><a href="#样例输入-11" class="headerlink" title="样例输入"></a>样例输入</h2><p>4</p><h2 id="样例输出-13"><a href="#样例输出-13" class="headerlink" title="样例输出"></a>样例输出</h2><p>50.2654825</p><h2 id="数据规模与约定-6"><a href="#数据规模与约定-6" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= r &lt;= 10000。</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>本题对精度要求较高，请注意π的值应该取较精确的值。你可以使用常量来表示π，比如PI=3.14159265358979323，也可以使用数学公式来求π，比如PI=atan(1.0)*4。</p><h2 id="代码提交-13"><a href="#代码提交-13" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.DecimalFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">Area</span><span class="params">(<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> Math.PI*r*r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">DecimalFormat df=<span class="keyword">new</span> DecimalFormat(<span class="string">&quot;0.0000000&quot;</span>);</span><br><span class="line">Scanner scan=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> r=scan.nextInt();</span><br><span class="line">System.out.println(df.format(Area(r)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="序列求和"><a href="#序列求和" class="headerlink" title="序列求和"></a>序列求和</h1><h2 id="资源限制-14"><a href="#资源限制-14" class="headerlink" title="资源限制"></a>资源限制</h2><p>时间限制：1.0s   内存限制：256.0MB</p><h2 id="问题描述-14"><a href="#问题描述-14" class="headerlink" title="问题描述"></a>问题描述</h2><p>求1+2+3+…+n的值。</p><h2 id="输入格式-10"><a href="#输入格式-10" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包括一个整数n。</p><h2 id="输出格式-12"><a href="#输出格式-12" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行，包括一个整数，表示1+2+3+…+n的值。</p><h2 id="样例输入-12"><a href="#样例输入-12" class="headerlink" title="样例输入"></a>样例输入</h2><p>4</p><h2 id="样例输出-14"><a href="#样例输出-14" class="headerlink" title="样例输出"></a>样例输出</h2><p>10</p><h2 id="样例输入-13"><a href="#样例输入-13" class="headerlink" title="样例输入"></a>样例输入</h2><p>100</p><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><p>有一些试题会给出多组样例输入输出以帮助你更好的做题。<br>一般在提交之前所有这些样例都需要测试通过才行，但这不代表这几组样例数据都正确了你的程序就是完全正确的，潜在的错误可能仍然导致你的得分较低。</p><h2 id="样例输出-15"><a href="#样例输出-15" class="headerlink" title="样例输出"></a>样例输出</h2><p>5050</p><h2 id="数据规模与约定-7"><a href="#数据规模与约定-7" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h2><p>1 &lt;= n &lt;= 1,000,000,000。</p><h2 id="代码提交-14"><a href="#代码提交-14" class="headerlink" title="代码提交"></a>代码提交</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">Sum</span><span class="params">(<span class="keyword">long</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1</span> + n) * n / <span class="number">2</span> + <span class="string">&quot;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">long</span> n = scan.nextLong();</span><br><span class="line">System.out.println(Sum(n));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 蓝桥杯 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建饥荒专用服务器</title>
      <link href="/2021/12/20/server/"/>
      <url>/2021/12/20/server/</url>
      
        <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>闲得无聊买了三年的腾讯云服务器，以后游戏挂机刷东西就可以在服务器上完成了<del>再也不用担心游戏本扰民了</del></p><p>用Python的pyautogui库可以完成许多重复性工作(可以模拟达到按键精灵的效果)</p><p>本文先简要描述一下搭建饥荒专用服务器的流程(steam版)</p><p>以下是本文所需的全部文件</p><p>提取码: 9527  <a class="btn-beautify button--animated pink large" href="https://pan.baidu.com/s/1XIaqVzuWrkGAa3wZKd1WyQ"   title="百度网盘下载链接"><i class="far fa-hand-point-right"></i><span>百度网盘下载链接</span></a></p><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>不多说，先买好云服务器(我买的腾讯云)  <a class="btn-beautify button--animated blue large" href="https://cloud.tencent.com/act/new?from=15616"   title="戳这里"><i class="far fa-hand-point-right"></i><span>戳这里</span></a></p><p>然后修改密码</p><p><img src="/img/%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81.png" alt="修改密码"></p><p>复制公网IP，并通过win10的远程桌面链接，连接到云服务器上</p><p><img src="/img/%E5%85%AC%E7%BD%91IP.png" alt="公网IP"> <img src="/img/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5.png" alt="远程连接"></p><p>然后将网盘下载好的内容复制到<strong>服务器</strong>的 文档 目录下</p><p><img src="/img/%E6%AD%A4%E7%94%B5%E8%84%91.png" alt="此电脑"></p><p>打开steamcmd文件夹，然后双击里面的.exe文件进行安装</p><p>打开脚本文件夹，以管理员身份运行里面的update文件</p><p>然后在<strong>自己电脑</strong>上新创建一个世界，到达选人物界面断开连接即可</p><p><img src="/img/%E6%96%AD%E5%BC%80.png" alt="断开连接"></p><p>将刚创建的存档<strong>复制到服务器</strong>的  C:\Users\Administrator\Documents\Klei\DoNotStarveTogether  目录下</p><p>并将存档名改为 “Cluster_1” 进入该存档 创建一个”cluster_token.txt”文本文件</p><p><img src="/img/%E4%BB%A4%E7%89%8C.png" alt="令牌"></p><p>从<strong>自己的电脑</strong>上复制mod文件  在 steam\steamapps\common\Don’t Starve Together\mods 目录下和 steam\steamapps\workshop\content\322330均是</p><p>将所有的mod名改成<strong>workshop-nums</strong>的形式(例：workshop-8516651315)  并复制所有mod</p><p><img src="/img/%E5%A4%8D%E5%88%B6%E5%B0%B1%E5%A5%BD.png" alt="steam mods"></p><p><img src="/img/%E4%BF%AE%E6%94%B9.png" alt="修改"></p><p>粘贴到云服务器的  C:\Users\Administrator\Documents\steamcmd\steamapps\common\Don’t Starve Together Dedicated Server\mods  目录下</p><p>实际上只需要复制你开服用的mod就行，但为了日后方便，还是将所有的mod都复制过来比较稳妥，这个过程可能耗时很长，请耐心等待</p><p>完成上述操作之后，将脚本文件中的start和startcave文件复制到<br>C:\Users\Administrator\Documents\steamcmd\steamapps\common\Don’t Starve Together Dedicated Server\bin 目录下并运行</p><p><img src="/img/%E5%AE%8C%E6%88%90%E5%9B%BE.png" alt="完成图"></p><p>运行完毕后，大功告成，在自己电脑上测试，看看能否搜到刚创建的服务器</p><p><img src="/img/%E5%A4%A7%E5%8A%9F%E5%91%8A%E6%88%90.png" alt="大功告成"></p>]]></content>
      
      
      <categories>
          
          <category> 腾讯云 </category>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期末不挂科速成课</title>
      <link href="/2021/11/16/FinalExam/"/>
      <url>/2021/11/16/FinalExam/</url>
      
        <content type="html"><![CDATA[<h2 id="速成课"><a href="#速成课" class="headerlink" title="速成课"></a>速成课</h2><p>资料来源<a class="btn-beautify button--animated blue large" href="https://www.techfens.com/"   title="TechFen's Blog"><i class="far fa-hand-point-right"></i><span>TechFen's Blog</span></a></p><p>这里收录了常见的一些期末考试的科目，更多速成课详情<a class="btn-beautify button--animated pink large" href="https://pan.techfens.com/"   title="戳这里"><i class="far fa-hand-point-right"></i><span>戳这里</span></a><br><img src="/img/%E9%80%9F%E6%88%90%E8%AF%BE.png" alt="速成课"></p><a class="btn-beautify button--animated pink large" href="https://pan.techfens.com/A%20-%20%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80"   title="数学类"><i class="far fa-hand-point-right"></i><span>数学类</span></a><p><img src="/img/%E6%95%B0%E5%AD%A6%E7%B1%BB.png" alt="数学类"></p><a class="btn-beautify button--animated red large" href="https://pan.techfens.com/D%20-%20%E6%9C%BA%E6%A2%B0%E3%80%81%E5%8A%9B%E5%AD%A6%E7%B1%BB"   title="机械力学类"><i class="far fa-hand-point-right"></i><span>机械力学类</span></a><p><img src="/img/%E6%9C%BA%E6%A2%B0%E5%8A%9B%E5%AD%A6%E7%B1%BB.png" alt="机械力学类"></p><a class="btn-beautify button--animated purple large" href="https://pan.techfens.com/C%20-%20%E7%BB%8F%E6%B5%8E%E3%80%81%E7%AE%A1%E7%90%86%E7%B1%BB"   title="经管类"><i class="far fa-hand-point-right"></i><span>经管类</span></a><p><img src="/img/%E7%BB%8F%E7%AE%A1%E7%B1%BB.png" alt="经管类"></p><a class="btn-beautify button--animated orange large" href="https://pan.techfens.com/E%20-%20%E9%80%9A%E4%BF%A1%E3%80%81%E7%94%B5%E6%B0%94%E7%B1%BB"   title="通信电气类"><i class="far fa-hand-point-right"></i><span>通信电气类</span></a><p><img src="/img/%E9%80%9A%E4%BF%A1%E7%94%B5%E6%B0%94%E7%B1%BB.png" alt="通信电气类"></p><a class="btn-beautify button--animated green large" href="https://pan.techfens.com/F%20-%20%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B1%BB"   title="计算机类"><i class="far fa-hand-point-right"></i><span>计算机类</span></a><p><img src="/img/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B1%BB.png" alt="计算机类"></p><a class="btn-beautify button--animated large" href="https://pan.techfens.com/G%20-%20%E5%8C%96%E5%B7%A5%E3%80%81%E5%8C%96%E5%AD%A6%E7%B1%BB"   title="化学类"><i class="far fa-hand-point-right"></i><span>化学类</span></a><p><img src="/img/%E5%8C%96%E5%AD%A6%E7%B1%BB.png" alt="化学类"></p>]]></content>
      
      
      <categories>
          
          <category> 期末不挂科 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown</title>
      <link href="/2021/11/10/MarkDown/"/>
      <url>/2021/11/10/MarkDown/</url>
      
        <content type="html"><![CDATA[<h1 id="学了五分钟的MarkDown语法"><a href="#学了五分钟的MarkDown语法" class="headerlink" title="学了五分钟的MarkDown语法"></a>学了五分钟的MarkDown语法</h1><h1 id="以后可能会继续更新"><a href="#以后可能会继续更新" class="headerlink" title="以后可能会继续更新"></a>以后可能会继续更新</h1><p>[在线编译器]<a href="https://dillinger.io/">https://dillinger.io/</a></p><h2 id="1-标题语法"><a href="#1-标题语法" class="headerlink" title="1.标题语法"></a>1.标题语法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 标题语法</span></span><br><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="测试环节"><a href="#测试环节" class="headerlink" title="测试环节"></a>测试环节</h3><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><h2 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a>2.字体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 加粗</span></span><br><span class="line">**我被加粗了**</span><br><span class="line"><span class="comment">// 代码高亮</span></span><br><span class="line">==HIGH LIGHT==</span><br><span class="line"><span class="comment">// 删除线</span></span><br><span class="line">~~我被删除啦~~</span><br><span class="line"><span class="comment">// 斜体</span></span><br><span class="line">*我是斜体字*</span><br></pre></td></tr></table></figure><h3 id="测试环节-1"><a href="#测试环节-1" class="headerlink" title="测试环节"></a>测试环节</h3><p><strong>我被加粗了</strong></p><p>==HIGH LIGHT==</p><p><del>我被删除啦</del></p><p><em>我是斜体字</em></p><h2 id="3-引用"><a href="#3-引用" class="headerlink" title="3.引用"></a>3.引用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引用语法</span></span><br><span class="line">&gt;作者: Kyle_CyaN</span><br><span class="line">&gt;&gt;作者: Kyle_CyaN</span><br><span class="line">&gt;&gt;&gt;作者: Kyle_CyaN</span><br><span class="line">&gt;&gt;&gt;&gt;作者: Kyle_CyaN</span><br></pre></td></tr></table></figure><h3 id="测试环节-2"><a href="#测试环节-2" class="headerlink" title="测试环节"></a>测试环节</h3><blockquote><p>作者: Kyle_CyaN</p><blockquote><p>作者: Kyle_CyaN</p><blockquote><p>作者: Kyle_CyaN</p><blockquote><p>作者: Kyle_CyaN</p></blockquote></blockquote></blockquote></blockquote><h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4.分割线"></a>4.分割线</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 分割线1</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">// 分割线2</span></span><br><span class="line">***</span><br></pre></td></tr></table></figure><h3 id="测试环节-3"><a href="#测试环节-3" class="headerlink" title="测试环节"></a>测试环节</h3><hr><hr><h2 id="5-图片插入"><a href="#5-图片插入" class="headerlink" title="5.图片插入"></a>5.图片插入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在线图片或本地图片</span></span><br><span class="line">![我的图片](photo/me.png)</span><br></pre></td></tr></table></figure><h3 id="测试环节-4"><a href="#测试环节-4" class="headerlink" title="测试环节"></a>测试环节</h3><p><img src="https://img2.baidu.com/it/u=1519358925,3330107491&fm=26&fmt=auto" alt="我的图片"></p><h2 id="6-超链接"><a href="#6-超链接" class="headerlink" title="6.超链接"></a>6.超链接</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 超链接语法</span></span><br><span class="line">[这里是BILIBILI](https:<span class="comment">//www.bilibili.com/)</span></span><br></pre></td></tr></table></figure><h3 id="测试环节-5"><a href="#测试环节-5" class="headerlink" title="测试环节"></a>测试环节</h3><p><a href="https://www.bilibili.com/">哔哩哔哩</a></p><h2 id="7-列表"><a href="#7-列表" class="headerlink" title="7.列表"></a>7.列表</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 无序列表</span></span><br><span class="line">- 目录<span class="number">1</span></span><br><span class="line">- 目录<span class="number">2</span></span><br><span class="line">- 目录<span class="number">3</span></span><br><span class="line"><span class="comment">// 有序列表</span></span><br><span class="line"><span class="number">1.</span>目录<span class="number">4</span></span><br><span class="line"><span class="number">2.</span>目录<span class="number">5</span></span><br><span class="line"><span class="number">3.</span>目录<span class="number">6</span></span><br></pre></td></tr></table></figure><h3 id="测试环节-6"><a href="#测试环节-6" class="headerlink" title="测试环节"></a>测试环节</h3><ul><li>目录1</li><li>目录2</li><li>目录3</li></ul><p>1.目录4<br>2.目录5<br>3.目录6</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>做表格当然是用工具啦，毕竟手敲那么累<br><a href="https://www.tablesgenerator.com/markdown_tables">Markdown Tables Generator</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/10/hello-world/"/>
      <url>/2021/11/10/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>这是我第一次使用<a href="https://hexo.io/">Hexo</a>框架搭建博客!<br>采用的主题是<a href="https://github.com/jerryc127/hexo-theme-butterfly">ButterFly</a><br>花了我一个晚上才搭建好，可以说是把能踩的坑全都踩了一遍。<br>以后会在这个小破站不定期更新一些学到的新东西。<br>如果想联系我的话，我的邮箱是<a href="mailto:&#x43;&#x79;&#x64;&#x65;&#x72;&#112;&#117;&#110;&#107;&#x32;&#48;&#55;&#x37;&#64;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;">&#x43;&#x79;&#x64;&#x65;&#x72;&#112;&#117;&#110;&#107;&#x32;&#48;&#55;&#x37;&#64;&#103;&#x6d;&#97;&#105;&#108;&#x2e;&#99;&#111;&#109;</a>。</p><h1 id="这里是我的QQ号"><a href="#这里是我的QQ号" class="headerlink" title="这里是我的QQ号"></a>这里是我的QQ号</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowQQ</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String Ciphertext = <span class="string">&quot;1235689&quot;</span>;</span><br><span class="line">String QQ = <span class="string">&quot;&quot;</span> +</span><br><span class="line">Ciphertext.charAt(<span class="number">0</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">3</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">5</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">4</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">2</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">5</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">3</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">1</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">6</span>) +</span><br><span class="line">Ciphertext.charAt(<span class="number">4</span>);</span><br><span class="line">System.out.println(QQ);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
